run mender_setup
mmc dev ${mender_uboot_dev}

# Set the kernel load address high for (self-)extracting kernels
# so they don't override themselves not anything else. kernel_addr
# is 0x8000 and ramdisk_addr is 0x02700000 (39MB). Hence we need to
# load the kernel so even big ramdisk won't override it. 45MB for a
# ramdisk should be fine
env set kernel_addr_r 0x05000000

setenv boot_config "@@UBOOT_BOOT_CONFIGURATION@@"


if test -z "${bootargs}"; then
    setenv bootargs ""
fi

# TODO: Make the factory GPIO configurable
# Configure GPIO 26 as input
gpio input 26
gpio read gpio_factory_val 26

# Check if it's zero (LOW)
if test "$gpio_factory_val" = "0"; then
    setenv bootargs "${bootargs} rootrwreset factoryreset"
fi

setexpr mender_kernel_part ${mender_boot_part} + @@KERNELFS_OFFSET_TO_ROOTFS@@
setexpr mender_kernel_part_hex ${mender_boot_part_hex} + @@KERNELFS_OFFSET_TO_ROOTFS@@
env set mender_kernel_part_root mmc 0:${mender_kernel_part}

load ${mender_kernel_part_root} ${kernel_addr_r} /@@KERNEL_IMAGETYPE@@

env set boot_script_addr 0x04000000
imxtract ${kernel_addr_r} bootscr-boot.scr ${boot_script_addr}
source ${boot_script_addr}

setenv silent 0
run mender_try_to_recover

